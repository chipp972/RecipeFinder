# This file describes how the application works

Program parts and Technologies :
	- Database (SQLite)
	- HTTP Server (Python)
	- Recommandation Engine (Python)
	- Web Crawler (Python)
	- Client (Browser)

Data type :
	How to identify a meal recipe on a web page :
		- A list (<ul> <li>) with the word "Ingredients" near it (required)
		- Words like "recipe", "chocolate", "melanger", "oeufs", "recette" etc.
		-

Server side :
	Contains the mysql database because there are a small quantity of data and users
	A service is executed that accepts udp messages on port "23000"
		- fill database (web crawler/user info)
		- get recipes with certain search caracteristics (client)
		- ...

Client side :
	Contains the user interface
	Start a survey on first start to fill user's taste informations
	All the recipes accessed are downloaded on the client to be
	used offline.
	Create files locally to store "favorites", "favorite ingredients",
	"user informations", ...

Web Crawler script :
	- A correspondance table of ingredients to minimize the number of duplications

Structure of the project :
	- doc the documentation on algorithms and methods used
	- src the sources of the server
		- cgi_bin/ : back-end scripts (+ recommandation engine, web crawler)
		- db/ : database managment scripts
		- wwww/ : the web pages
		- server.py : the server main
		- recipe_finder.db : the SQLite database
		- index.html : the main web page
	- tst the tests on the algorithms of the web crawler and recommandation engine.
